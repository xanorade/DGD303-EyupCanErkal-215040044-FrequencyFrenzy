//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerHealthComponent playerHealth { get { return (PlayerHealthComponent)GetComponent(GameComponentsLookup.PlayerHealth); } }
    public bool hasPlayerHealth { get { return HasComponent(GameComponentsLookup.PlayerHealth); } }

    public void AddPlayerHealth(int newValue) {
        var index = GameComponentsLookup.PlayerHealth;
        var component = (PlayerHealthComponent)CreateComponent(index, typeof(PlayerHealthComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerHealth(int newValue) {
        var index = GameComponentsLookup.PlayerHealth;
        var component = (PlayerHealthComponent)CreateComponent(index, typeof(PlayerHealthComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerHealth() {
        RemoveComponent(GameComponentsLookup.PlayerHealth);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerHealth;

    public static Entitas.IMatcher<GameEntity> PlayerHealth {
        get {
            if (_matcherPlayerHealth == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerHealth);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerHealth = matcher;
            }

            return _matcherPlayerHealth;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity gameRunningEntity { get { return GetGroup(GameStateMatcher.GameRunning).GetSingleEntity(); } }
    public GameRunningComponent gameRunning { get { return gameRunningEntity.gameRunning; } }
    public bool hasGameRunning { get { return gameRunningEntity != null; } }

    public GameStateEntity SetGameRunning(int newValue) {
        if (hasGameRunning) {
            throw new Entitas.EntitasException("Could not set GameRunning!\n" + this + " already has an entity with GameRunningComponent!",
                "You should check if the context already has a gameRunningEntity before setting it or use context.ReplaceGameRunning().");
        }
        var entity = CreateEntity();
        entity.AddGameRunning(newValue);
        return entity;
    }

    public void ReplaceGameRunning(int newValue) {
        var entity = gameRunningEntity;
        if (entity == null) {
            entity = SetGameRunning(newValue);
        } else {
            entity.ReplaceGameRunning(newValue);
        }
    }

    public void RemoveGameRunning() {
        gameRunningEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public GameRunningComponent gameRunning { get { return (GameRunningComponent)GetComponent(GameStateComponentsLookup.GameRunning); } }
    public bool hasGameRunning { get { return HasComponent(GameStateComponentsLookup.GameRunning); } }

    public void AddGameRunning(int newValue) {
        var index = GameStateComponentsLookup.GameRunning;
        var component = (GameRunningComponent)CreateComponent(index, typeof(GameRunningComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameRunning(int newValue) {
        var index = GameStateComponentsLookup.GameRunning;
        var component = (GameRunningComponent)CreateComponent(index, typeof(GameRunningComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameRunning() {
        RemoveComponent(GameStateComponentsLookup.GameRunning);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherGameRunning;

    public static Entitas.IMatcher<GameStateEntity> GameRunning {
        get {
            if (_matcherGameRunning == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.GameRunning);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherGameRunning = matcher;
            }

            return _matcherGameRunning;
        }
    }
}
